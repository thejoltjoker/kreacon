name: Playwright Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  e2e:
    environment:
      name: 'Test'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      PUBLIC_BASE_URL: ${{ vars.PUBLIC_BASE_URL }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
      AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
      OAUTH_DISCORD_CLIENT_ID: ${{ secrets.OAUTH_DISCORD_CLIENT_ID }}
      OAUTH_DISCORD_CLIENT_SECRET: ${{ secrets.OAUTH_DISCORD_CLIENT_SECRET }}
      OAUTH_DISCORD_REDIRECT_URI: ${{ secrets.OAUTH_DISCORD_REDIRECT_URI }}
      OAUTH_GITHUB_CLIENT_ID: ${{ secrets.OAUTH_GITHUB_CLIENT_ID }}
      OAUTH_GITHUB_CLIENT_SECRET: ${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }}
      OAUTH_GITHUB_REDIRECT_URI: ${{ secrets.OAUTH_GITHUB_REDIRECT_URI }}
      TICKET_API_URL: ${{ secrets.TICKET_API_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Install dependencies
        run: npm ci
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "version=$(node -e "console.log(require('@playwright/test/package.json').version)")" >> $GITHUB_OUTPUT
      - name: Cache Playwright browsers
        id: playwright-cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ steps.playwright-version.outputs.version }}
      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: Add GitHub Actions IP to PostgreSQL firewall
        id: add-firewall-rule
        continue-on-error: true
        run: |
          GITHUB_IP=$(curl -s https://api.ipify.org)
          echo "GitHub IP: $GITHUB_IP"
          az postgres flexible-server firewall-rule create \
            --rule-name github-actions-runner \
            --resource-group ${{vars.AZURE_POSTGRESQL_RESOURCE_GROUP}} \
            --name ${{vars.AZURE_POSTGRESQL_SERVER_NAME}} \
            --start-ip-address $GITHUB_IP \
            --end-ip-address $GITHUB_IP
          echo "rule_created=true" >> $GITHUB_OUTPUT
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Run migrations
        env:
          DB_MIGRATING: true
        run: npm run db:migrate
      - name: Seed database
        env:
          DB_SEEDING: true
        run: npm run db:seed
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 3
      - name: Remove GitHub Actions IP from PostgreSQL firewall
        if: always() && steps.add-firewall-rule.outputs.rule_created == 'true'
        continue-on-error: true
        run: |
          az postgres flexible-server firewall-rule delete \
            --rule-name github-actions-runner \
            --resource-group "${{ vars.AZURE_POSTGRESQL_RESOURCE_GROUP }}" \
            --name "${{ vars.AZURE_POSTGRESQL_SERVER_NAME }}" \
            --yes
