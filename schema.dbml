enum media_type {
  image
  video
  audio
}

enum role {
  user
  admin
}

enum submission_status {
  draft
  pending
  published
  rejected
  deleted
  archived
}

enum status {
  active
  banned
}

table account {
  user_id uuid [not null]
  provider varchar(255) [not null]
  provider_account_id varchar [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  indexes {
    (provider, provider_account_id) [pk]
  }
}

table category {
  id serial [pk, not null, increment]
  name varchar(255) [not null]
  slug varchar(300) [not null, unique]
  description text [not null]
  media_type media_type [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

table event_category {
  id serial [pk, not null, increment]
  category_id integer [not null]
  event_id integer [not null]

  indexes {
    (event_id, category_id) [name: 'event_category_event_id_category_id_unique', unique]
  }
}

table event {
  id serial [pk, not null, increment]
  description varchar(512) [not null]
  name varchar(255) [not null]
  slug varchar(255) [not null, unique]
  submissions_close_at timestamp [not null]
  submissions_open_at timestamp [not null]
  voting_close_at timestamp [not null]
  voting_open_at timestamp [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  indexes {
    (name, description) [name: 'events_search_idx']
  }
}

table media {
  id serial [pk, not null, increment]
  type media_type [not null]
  url varchar(255) [not null]
  filename varchar(255) [not null]
  alt varchar(255)
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

table prize {
  id serial [pk, not null, increment]
  text text [not null]
  position integer [not null]
  value integer
  category_id integer
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

table reaction {
  value varchar(16) [not null]
  user_id uuid [not null]
  submission_id varchar(255) [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  indexes {
    (user_id, submission_id) [pk]
  }
}

table rule {
  id serial [pk, not null, increment]
  text text [not null]
  event_id integer
  category_id integer
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

table session {
  id varchar(255) [pk, not null]
  user_id uuid [not null]
  expires_at timestamp [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

table submission {
  id varchar [pk, not null]
  user_id uuid [not null]
  category_id integer [not null]
  event_id integer [not null]
  media_id integer [not null]
  status submission_status [not null, default: 'draft']
  thumbnail_id integer [not null]
  ticket_id varchar(255) [not null]
  title varchar(255) [not null]
  views integer [not null, default: 0]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  indexes {
    title [name: 'submissions_search_idx']
  }
}

table ticket {
  id varchar(255) [pk, not null]
  user_id uuid [not null]
  event_id integer [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  indexes {
    (user_id, event_id) [name: 'ticket_user_id_event_id_unique', unique]
  }
}

table user {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  username varchar(255) [not null, unique]
  email varchar(255) [not null, unique]
  email_verified_at timestamp
  password varchar(255) [not null]
  role role [not null, default: 'user']
  picture varchar(255)
  status status [not null, default: 'active']
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

table vote {
  submission_id varchar [not null]
  user_id uuid [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  indexes {
    (submission_id, user_id) [pk]
  }
}

ref: account.user_id > user.id

ref: event_category.category_id > category.id

ref: event_category.event_id > event.id

ref: prize.category_id > event_category.id

ref: reaction.user_id > user.id

ref: reaction.submission_id > submission.id

ref: rule.category_id > event_category.id

ref: rule.event_id > event.id

ref: session.user_id - user.id

ref: submission.user_id > user.id

ref: submission.category_id > category.id

ref: submission.ticket_id - ticket.id

ref: submission.event_id > event.id

ref: submission.thumbnail_id - media.id

ref: ticket.user_id > user.id

ref: ticket.event_id > event.id

ref: vote.user_id > user.id

ref: vote.submission_id > submission.id